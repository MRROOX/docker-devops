version: "3.3"
services:
  portainer:
    image: portainer/portainer
    container_name: portainer_devops
    restart: on-failure
    ports:
      - "9999:9000"
      - "8008:8080"
    volumes:
      - type: volume
        source: portainer_data
        target: /data
      - type: bind
        source: /usr/bin/docker
        target: /usr/bin/docker
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    networks: 
      - devops_net

  jenkins-kubectl:
    build:
      context: ./JenkinsK8sHelm
      dockerfile: Dockerfile
    container_name: jenkins_kubectl
    user: root:root
    restart: on-failure
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - type: volume
        source: jenkins_home_kubectl
        target: /var/jenkins_home
      - type: bind
        source: /usr/bin/docker
        target: /usr/bin/docker
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        
    networks: 
      - devops_net
  
  ## https://hub.docker.com/r/bitnami/sonarqube/
  sonarqube:
    image: bitnami/sonarqube:latest
    depends_on:
      - db_sonar
    container_name: sonar_devops
    restart: on-failure
    ports: 
      - 9000:9000
      - 443:8443 
    volumes: 
      - type: volume
        source: sonarqube_data
        target: /bitnami/sonarqube
    networks: 
      - devops_net
    environment: 
      - SONARQUBE_DATABASE_USER=sonar
      - SONARQUBE_DATABASE_PASSWORD=sonar
      - SONARQUBE_DATABASE_NAME=sonar
      - SONARQUBE_DATABASE_HOST=db_sonar

 
  db_sonar:
    image: postgres
    container_name: db_sonar
    restart: always
    environment: 
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - type: volume
        source: postgresql_data
        target: /var/lib/postgresql/data
    
    networks: 
      - devops_net

networks: 
  devops_net:

volumes:
  portainer_data:

  jenkins_home_kubectl:
  
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:

  postgresql_data:
